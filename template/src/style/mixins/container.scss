@function breakpoint-min($name, $breakpoints: $container) {
    $min: map-get(map-get($breakpoints, $name), media);
    @return if($min !=0, $min, null);
}

@mixin media-breakpoint-up($name, $breakpoints: $container) {
    $min: breakpoint-min($name, $breakpoints);

    @if $min {
        @media (min-width: $min) {
            @content;
        }
    }

    @else {
        @content;
    }
}

@mixin make-container($padding: $container) {
    position: relative;
    margin-right: auto;
    margin-left: auto;
    width: 100%;

    @each $breakpoint in map-keys($padding) {
        @include media-breakpoint-up($breakpoint) {
            $padding: map-get(map-get($container, $breakpoint), padding);
            $gutter: map-get(map-get($container, $breakpoint), gutter);

            padding-right: $padding;
            padding-left: $padding;
            max-width: map-get(map-get($container, $breakpoint), width);

            &.-grid {
                padding-right: $gutter+$padding;
                padding-left: $gutter+$padding;
            }
        }
    }
}

@mixin make-row($padding: $container) {
    display: flex;
    flex-wrap: wrap;

    @each $breakpoint in map-keys($padding) {
        @include media-breakpoint-up($breakpoint) {
            $gutter: map-get(map-get($container, $breakpoint), gutter);

            margin-right: -$gutter;
            margin-left: -$gutter;
        }
    }
}

@mixin col-padding($padding: $container) {
    @each $breakpoint in map-keys($padding) {
        @include media-breakpoint-up($breakpoint) {
            $gutter: map-get(map-get($container, $breakpoint), gutter);

            padding-right: $gutter;
            padding-left: $gutter;
        }
    }
}

@mixin col-width($percent) {
    width: $percent;
    max-width: $percent;
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 $percent;
    -ms-flex: 0 0 $percent;
    flex: 0 0 $percent;
}
